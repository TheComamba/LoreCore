name: Release Binaries

on:
  push:
    branches: ["main"]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: ["main"]

jobs:
  buildLinux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: ./install_build_dependencies_linux.sh

      - run: cargo build --release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui artifacts
          cp target/release/liblorecore.so artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreLinuxLibrary
          path: artifacts

  buildWindows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - run: cargo build --release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui.exe artifacts
          cp target/release/lorecore.dll artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreWindowsLibrary
          path: artifacts

  buildMacOS:
    name: Build on MacOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - run: cargo build --release

      - name: Display file structure
        run: ls -l target/release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui artifacts
          cp target/release/liblorecore.dylib artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreMacOSLibrary
          path: artifacts

  publishBinaries:
    name: Publish Binaries
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [buildLinux, buildWindows, buildMacOS]
    permissions: write-all

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display file structure
        run: ls -R

      - name: Packaging Linux Artifacts
        run: |
          cd artifacts
          zip LoreCoreLinuxLibrary *
          cd ..

      - name: Packaging Windows Artifacts
        run: |
          cd artifacts
          zip LoreCoreWindowsLibrary *
          cd ..

      - name: Packaging MacOS Artifacts
        run: |
          cd artifacts
          zip LoreCoreMacOSLibrary *
          cd ..

      - name: Display file structure
        run: ls -R

      - name: Checkout Repo to have access to CHANGELOG.md
        uses: actions/checkout@v3

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.zip