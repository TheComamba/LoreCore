name: Release Binaries

on:
  push:
    branches: ["main"]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: ["main"]

jobs:
  buildLinux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: ./install_build_dependencies_linux.sh

      - run: cargo build --release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui artifacts
          cp target/release/liblorecore.so artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreLinuxLibrary
          path: artifacts

  buildWindows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - run: cargo build --release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui.exe artifacts
          cp target/release/lorecore.dll artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreWindowsLibrary
          path: artifacts

  buildMacOS:
    name: Build on MacOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - run: cargo build --release

      - name: Display file structure
        run: ls -l target/release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui artifacts
          cp target/release/liblorecore.dylib artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreMacOSLibrary
          path: artifacts

  exportChangelog:
    name: Export Changelog
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch current changelog
        run: ./changelogs/get_current.sh

      - name: Export contents
        run: echo '::set-output name=CHANGELOG::$(cat changelogs/current.md)' >> $GITHUB_OUTPUT

  publishBinaries:
    name: Publish Binaries
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [buildLinux, buildWindows, buildMacOS, exportChangelog]
    permissions: write-all

    steps:
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreLinuxLibrary
          path: artifactsLinux

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreWindowsLibrary
          path: artifactsWindows

      - name: Download MacOS Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreMacOSLibrary
          path: artifactsMacOS

      - name: Compress folders
        run: |
          zip -r binariesLinux.zip artifactsLinux
          zip -r binariesWindows.zip artifactsWindows
          zip -r binariesMacOS.zip artifactsMacOS

      - name: Check Files' existence just before upload
        run: ls -l binaries*

      - name: Upload Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: binaries*.zip
          body: ${{ needs.exportChangelog.outputs.CHANGELOG }}