name: Release Binaries

on:
  push:
    branches: ["main"]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: ["main"]

jobs:
  buildLinux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: ./install_build_dependencies_linux.sh

      - run: cargo build --release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui artifacts
          cp target/release/liblorecore.so artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreLinuxLibrary
          path: artifacts

  buildWindows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - run: cargo build --release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui.exe artifacts
          cp target/release/lorecore.dll artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreWindowsLibrary
          path: artifacts

  buildMacOS:
    name: Build on MacOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - run: cargo build --release

      - name: Display file structure
        run: ls -l target/release

      - name: Add artifacts to folder
        run: |
          mkdir artifacts
          cp target/release/loregui artifacts
          cp target/release/liblorecore.dylib artifacts
          cp lorecore_api.h artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: LoreCoreMacOSLibrary
          path: artifacts

  testExecutabilityLinux:
    name: Test Executability on Linux
    runs-on: ubuntu-latest
    needs: [buildLinux]

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreLinuxLibrary
          path: artifacts

      - name: Display file structure
        run: ls -l artifacts

      - name: Test Executability
        run: |
          cd artifacts
          chmod +x loregui
          ./loregui &
          sleep 5
          killall loregui

  testExecutabilityWindows:
    name: Test Executability on Windows
    runs-on: windows-latest
    needs: [buildWindows]

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreWindowsLibrary
          path: artifacts

      - name: Display file structure
        run: ls -l artifacts

      - name: Test Executability
        run: |
          cd artifacts
          .\loregui.exe &
          sleep 5
          taskkill /IM loregui.exe /F

  testExecutabilityMacOS:
    name: Test Executability on MacOS
    runs-on: macos-latest
    needs: [buildMacOS]

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreMacOSLibrary
          path: artifacts

      - name: Display file structure
        run: ls -l artifacts

      - name: Test Executability
        run: |
          cd artifacts
          chmod +x loregui
          ./loregui &
          sleep 5
          killall loregui

  uploadChangelog:
    name: Upload Changelog
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch current changelog
        run: ./changelogs/get_current.sh

      - name: Rename File's
        run: mv changelogs/current.md changelogs/changelog.md

      - name: Upload Changelog
        uses: actions/upload-artifact@v3
        with:
          name: Changelog
          path: changelogs/changelog.md

  publishBinaries:
    name: Publish Binaries
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [buildLinux, buildWindows, buildMacOS, uploadChangelog]
    permissions: write-all

    steps:
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreLinuxLibrary
          path: artifactsLinux

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreWindowsLibrary
          path: artifactsWindows

      - name: Download MacOS Artifacts
        uses: actions/download-artifact@v3
        with:
          name: LoreCoreMacOSLibrary
          path: artifactsMacOS

      - name: Compress folders
        run: |
          zip -r binariesLinux.zip artifactsLinux
          zip -r binariesWindows.zip artifactsWindows
          zip -r binariesMacOS.zip artifactsMacOS

      - name: Download Changelog
        uses: actions/download-artifact@v3
        with:
          name: Changelog
          path: .

      - name: Display file structure  
        run: ls -lRa

      - name: Check Files' existence just before upload
        run: |
          ls -l binaries*
          cat changelog.md

      - name: Upload Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: binaries*.zip
          body_path: changelog.md